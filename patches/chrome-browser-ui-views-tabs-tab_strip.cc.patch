diff --git a/chrome/browser/ui/views/tabs/tab_strip.cc b/chrome/browser/ui/views/tabs/tab_strip.cc
index 6752cecad126437f28398459247de6e1104a230c..0efc80ddb04a68571d509f21d5b975b4739f4765 100644
--- a/chrome/browser/ui/views/tabs/tab_strip.cc
+++ b/chrome/browser/ui/views/tabs/tab_strip.cc
@@ -532,6 +532,7 @@ class TabStrip::TabDragContextImpl : public TabDragContext,
   std::vector<gfx::Rect> CalculateBoundsForDraggedViews(
       const std::vector<raw_ptr<TabSlotView, VectorExperimental>>& views)
       override {
+    BRAVE_TAB_DRAG_CONTEXT_IMPL_CALCULATE_BOUNDS_FOR_DRAGGED_VIEWS
     CHECK(!views.empty(), base::NotFatalUntil::M128)
         << "The views vector must not be empty.";
 
@@ -735,6 +736,7 @@ class TabStrip::TabDragContextImpl : public TabDragContext,
     // index.
     std::stable_sort(orderable_children.begin(), orderable_children.end());
 
+    BRAVE_TAB_DRAG_CONTEXT_IMPL_PAINT_CHILDREN
     for (const ZOrderableTabContainerElement& child : orderable_children) {
       child.view()->Paint(paint_info);
     }
@@ -828,6 +830,7 @@ class TabStrip::TabDragContextImpl : public TabDragContext,
         continue;
       }
 
+      BRAVE_TAB_DRAG_CONTEXT_IMPL_CALCULATE_INSERTION_INDEX
       // If there's a group header here, and we're dragging a group, we might
       // end up on either side of that header. Check both cases to find the
       // best option.
